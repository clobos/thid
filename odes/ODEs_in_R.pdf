\documentclass[pdftex,12pt,final,reqno]{article}\usepackage[]{graphicx}\usepackage[]{color}
%% maxwidth is the original width if it is less than linewidth
%% otherwise use linewidth (to make sure the graphics do not exceed the margin)
\makeatletter
\def\maxwidth{ %
  \ifdim\Gin@nat@width>\linewidth
    \linewidth
  \else
    \Gin@nat@width
  \fi
}
\makeatother

\definecolor{fgcolor}{rgb}{0.345, 0.345, 0.345}
\newcommand{\hlnum}[1]{\textcolor[rgb]{0.686,0.059,0.569}{#1}}%
\newcommand{\hlstr}[1]{\textcolor[rgb]{0.192,0.494,0.8}{#1}}%
\newcommand{\hlcom}[1]{\textcolor[rgb]{0.678,0.584,0.686}{\textit{#1}}}%
\newcommand{\hlopt}[1]{\textcolor[rgb]{0,0,0}{#1}}%
\newcommand{\hlstd}[1]{\textcolor[rgb]{0.345,0.345,0.345}{#1}}%
\newcommand{\hlkwa}[1]{\textcolor[rgb]{0.161,0.373,0.58}{\textbf{#1}}}%
\newcommand{\hlkwb}[1]{\textcolor[rgb]{0.69,0.353,0.396}{#1}}%
\newcommand{\hlkwc}[1]{\textcolor[rgb]{0.333,0.667,0.333}{#1}}%
\newcommand{\hlkwd}[1]{\textcolor[rgb]{0.737,0.353,0.396}{\textbf{#1}}}%
\let\hlipl\hlkwb

\usepackage{framed}
\makeatletter
\newenvironment{kframe}{%
 \def\at@end@of@kframe{}%
 \ifinner\ifhmode%
  \def\at@end@of@kframe{\end{minipage}}%
  \begin{minipage}{\columnwidth}%
 \fi\fi%
 \def\FrameCommand##1{\hskip\@totalleftmargin \hskip-\fboxsep
 \colorbox{shadecolor}{##1}\hskip-\fboxsep
     % There is no \\@totalrightmargin, so:
     \hskip-\linewidth \hskip-\@totalleftmargin \hskip\columnwidth}%
 \MakeFramed {\advance\hsize-\width
   \@totalleftmargin\z@ \linewidth\hsize
   \@setminipage}}%
 {\par\unskip\endMakeFramed%
 \at@end@of@kframe}
\makeatother

\definecolor{shadecolor}{rgb}{.97, .97, .97}
\definecolor{messagecolor}{rgb}{0, 0, 0}
\definecolor{warningcolor}{rgb}{1, 0, 1}
\definecolor{errorcolor}{rgb}{1, 0, 0}
\newenvironment{knitrout}{}{} % an empty environment to be redefined in TeX

\usepackage{alltt}
\usepackage{times}
\usepackage[utf8]{inputenc}
\usepackage[round]{natbib}
\usepackage{paralist}
\usepackage{longtable}
\usepackage[colorlinks=true]{hyperref}  
\hypersetup{pdftitle={ODEs in R}}
\usepackage{amsmath}
\usepackage{amsthm}
\usepackage{amsfonts}

\setlength{\textwidth}{6.25in}
\setlength{\textheight}{8.75in}
\setlength{\evensidemargin}{0in}
\setlength{\oddsidemargin}{0in}
\setlength{\topmargin}{-0.35in}
\setlength{\parskip}{0.1in}  
\setlength{\parindent}{0.0in}  
\setcounter{secnumdepth}{1}
\setcounter{tocdepth}{2}

\theoremstyle{definition}
\newtheorem{exercise}{Exercise}
\newtheorem{challenge}[exercise]{*Exercise}
\theoremstyle{remark}
\newtheorem*{solution}{Solution}

\newcommand{\code}[1]{\texttt{#1}}
\newcommand{\pkg}[1]{\textsf{#1}}
\newcommand{\Prob}[1]{\mathbb{P}\left[#1\right]}
\newcommand{\expect}[1]{\mathbb{E}\left[#1\right]}
\newcommand{\var}[1]{\mathrm{Var}\left[#1\right]}

%%\newcommand<>{\emphcol}[1]{\textcolor#2{red!50!blue}{#1}}
\newcommand\scinot[2]{$#1 \times 10^{#2}$}

%%%%%%%%%%%%%%%%%%

\title{Integrating ordinary differential equations in \pkg{R}}

\author{Aaron A. King\\
with contributions from\\
Ben Bolker, John Drake, Pej Rohani, and Dave Smith}

\date{
  \today\\
  Licensed under the Creative Commons attribution-noncommercial license, \texttt{http://creativecommons.org/licenses/by-nc/3.0/}.
  Please share and remix noncommercially, mentioning its origin \includegraphics[height=10pt]{figs/cc-by-nc}.
}

\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}


{\ttfamily\noindent\bfseries\color{errorcolor}{\#\# Error in eval(expr, envir, enclos): object 'opts\_chunk' not found}}\end{kframe}
\end{knitrout}

\IfFileExists{upquote.sty}{\usepackage{upquote}}{}
\begin{document}

\maketitle

\section{Introduction}

Here we begin our study of computational techniques for studying epidemiological models. 
In this session we introduce the numerical solution (or integration) of nonlinear differential equations using the sophisticated solvers found in the package \pkg{deSolve}.
Numerical integration is one of the most important tools we have for the analysis of epidemiological models.
 
\section{The SIR model}

As we saw in the lecture, the classical SIR compartmental model divides a population of hosts into three classes: susceptible, infected, recovered.
The model describes how the fraction of a population in each of these classes changes with time.
Alternatively, the model can track the number of individuals in each class.
Births are modeled as flows from ``nowhere'' into the susceptible class; deaths are modeled as flows from the S, I, or R compartment into ``nowhere''.
If $S$, $I$, and $R$ refer to the fractions of indivduals in each compartment, then these \emph{state variables} change according to the following system of differential equations:
\begin{equation*}
  \begin{aligned}
    \frac{dS}{dt} &= B-\lambda\,S-\mu\,S\\
    \frac{dI}{dt} &= \lambda\,S-\gamma\,I-\mu\,I\\
    \frac{dR}{dt} &= \gamma\,I-\mu\,R\\
  \end{aligned}
\end{equation*}
Here, $B$ is the crude birth rate (births per unit time), $\mu$ is the death rate and $\gamma$ is the recovery rate.
We'll assume that the force of infection, $\lambda$, has the form
\begin{equation*}
  \lambda = \beta\,I
\end{equation*}
so that the risk of infection a susceptible faces is proportional to the \emph{prevalence} (the fraction of the population that is infected).
This is known as the assumption of frequency-dependent transmission.
%  Notice that we allow for the possibility of a contact rate, $\beta(t)$, that varies in time.

\section{Solving ODEs in R}

Like almost all epidemiological models, one can't solve these equations analytically.
However, we can compute the \emph{trajectories} of a continuous-time model such as this one by integrating the equations numerically.
Doing this accurately involves a lot of calculation, and there are smart ways and not-so-smart ways of going about it.
This very common problem has been very thoroughly studied by numerical analysts for generations so that, when the equations are smooth, well-behaved functions, excellent numerical integration algorithms are readily available to compute approximate solutions to high precision.
In particular, \pkg{R} has several sophisticated ODE solvers which (for many problems) will give highly accurate solutions.
These algorithms are flexible, automatically perform checks, and give informative errors and warnings.
To use the numerical differential equation solver package, we load the \pkg{deSolve} package
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{require}\hlstd{(deSolve)}
\end{alltt}


{\ttfamily\noindent\itshape\color{messagecolor}{\#\# Loading required package: deSolve}}\end{kframe}
\end{knitrout}
[Here, you may get an error saying that the \pkg{deSolve} package is not installed.
  If you do, run the following command:
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{source}\hlstd{(}\hlstr{"http://kinglab.eeb.lsa.umich.edu/ICTPWID/labs/R_Packages.R"}\hlstd{)}
\end{alltt}
\end{kframe}
\end{knitrout}
This will install not only \pkg{deSolve} but a bunch of other useful packages.
If you ever need to install a package, you can use the command
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{install.package}\hlstd{(name.of.package)}
\end{alltt}
\end{kframe}
\end{knitrout}
Be sure to use quotes when necessary.]
The ODE solver we'll use is called \code{ode}.
Let's have a look at the help page for this function.
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlopt{?}\hlstd{ode}
\end{alltt}
\end{kframe}
\end{knitrout}
\code{ode} needs to know the \emph{initial values} of the state variables (\code{y}), the \code{times} at which we want solutions, the right-hand side of the ODE \code{func}.
The latter can optionally depend on some parameters (\code{parms}).

\section{SIR for a closed epidemic}

Let's study the SIR model for a closed population, i.e., one in which we can neglect births and deaths.
Recall that the differential equations for the closed epidemic are
\begin{equation*}
  \begin{aligned}
    \frac{dS}{dt} &= -\beta\,S\,I\\
    \frac{dI}{dt} &= \beta\,S\,I-\gamma\,I\\
    \frac{dR}{dt} &= \gamma\,I\\
  \end{aligned}
\end{equation*}
To encode these equations in a form suitable for use as the \code{func} argument to \code{ode}, we'll need to write a function.
For example:
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{closed.sir.model} \hlkwb{<-} \hlkwa{function} \hlstd{(}\hlkwc{t}\hlstd{,} \hlkwc{x}\hlstd{,} \hlkwc{params}\hlstd{) \{}
  \hlcom{## first extract the state variables}
  \hlstd{S} \hlkwb{<-} \hlstd{x[}\hlnum{1}\hlstd{]}
  \hlstd{I} \hlkwb{<-} \hlstd{x[}\hlnum{2}\hlstd{]}
  \hlstd{R} \hlkwb{<-} \hlstd{x[}\hlnum{3}\hlstd{]}
  \hlcom{## now extract the parameters}
  \hlstd{beta} \hlkwb{<-} \hlstd{params[}\hlstr{"beta"}\hlstd{]}
  \hlstd{gamma} \hlkwb{<-} \hlstd{params[}\hlstr{"gamma"}\hlstd{]}
  \hlcom{## now code the model equations}
  \hlstd{dSdt} \hlkwb{<-} \hlopt{-}\hlstd{beta}\hlopt{*}\hlstd{S}\hlopt{*}\hlstd{I}
  \hlstd{dIdt} \hlkwb{<-} \hlstd{beta}\hlopt{*}\hlstd{S}\hlopt{*}\hlstd{I}\hlopt{-}\hlstd{gamma}\hlopt{*}\hlstd{I}
  \hlstd{dRdt} \hlkwb{<-} \hlstd{gamma}\hlopt{*}\hlstd{I}
  \hlcom{## combine results into a single vector}
  \hlstd{dxdt} \hlkwb{<-} \hlkwd{c}\hlstd{(dSdt,dIdt,dRdt)}
  \hlcom{## return result as a list!}
  \hlkwd{list}\hlstd{(dxdt)}
\hlstd{\}}
\end{alltt}
\end{kframe}
\end{knitrout}
Note that the order and type of the arguments and output of this function must exactly match \code{ode}'s expectations.
Thus, for instance, the time variable \code{t} must be the first argument even if, as is the case here, nothing in the function depends on time.
[When the RHS of the ODE are independent of time, we say the ODE are \emph{autonomous}.]
Note also, that \code{ode} expects the values of the ODE RHS to be the first element of a \code{list}.

Now we can call \code{ode} to compute trajectories of the model.
To do this, we'll need some values of the parameters.
If we're thinking of a disease something like measles, and measuring time in years, we might use something like:
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{params} \hlkwb{<-} \hlkwd{c}\hlstd{(}\hlkwc{beta}\hlstd{=}\hlnum{400}\hlstd{,}\hlkwc{gamma}\hlstd{=}\hlnum{365}\hlopt{/}\hlnum{13}\hlstd{)}
\end{alltt}
\end{kframe}
\end{knitrout}
\begin{exercise}
  What is the infectious period of this disease?
  What is $R_0$ in this case?
\end{exercise}

We now state the times at which we want solutions and specify the \emph{initial conditions},
i.e., the starting values of the state variables $S$, $I$, and $R$:
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{times} \hlkwb{<-} \hlkwd{seq}\hlstd{(}\hlkwc{from}\hlstd{=}\hlnum{0}\hlstd{,}\hlkwc{to}\hlstd{=}\hlnum{60}\hlopt{/}\hlnum{365}\hlstd{,}\hlkwc{by}\hlstd{=}\hlnum{1}\hlopt{/}\hlnum{365}\hlopt{/}\hlnum{4}\hlstd{)} \hlcom{# returns a sequence}
\hlstd{xstart} \hlkwb{<-} \hlkwd{c}\hlstd{(}\hlkwc{S}\hlstd{=}\hlnum{0.999}\hlstd{,}\hlkwc{I}\hlstd{=}\hlnum{0.001}\hlstd{,}\hlkwc{R}\hlstd{=}\hlnum{0.000}\hlstd{)}     \hlcom{# initial conditions}
\end{alltt}
\end{kframe}
\end{knitrout}

Next, we compute a model trajectory with the \code{ode} command and store the result in a data-frame:
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{out} \hlkwb{<-} \hlkwd{as.data.frame}\hlstd{(}
                     \hlkwd{ode}\hlstd{(}
                         \hlkwc{func}\hlstd{=closed.sir.model,}
                         \hlkwc{y}\hlstd{=xstart,}
                         \hlkwc{times}\hlstd{=times,}
                         \hlkwc{parms}\hlstd{=params}
                         \hlstd{)}
                     \hlstd{)}
\end{alltt}
\end{kframe}
\end{knitrout}
and plot the results in Figure~\ref{fig:closed-epi} using the commands:
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{plot}\hlstd{(I}\hlopt{~}\hlstd{time,}\hlkwc{data}\hlstd{=out,}\hlkwc{type}\hlstd{=}\hlstr{'l'}\hlstd{)}
\end{alltt}
\end{kframe}
\end{knitrout}

\begin{figure}
  \begin{center}
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}
\includegraphics[width=\maxwidth]{figure/unnamed-chunk-5-1} 

\end{knitrout}
  \end{center}
  \caption{
    Trajectory of the SIR model of an epidemic in a closed population.
    $I$ is the fraction of the population infected.
  }
  \label{fig:closed-epi}
\end{figure}

\begin{exercise}
  Suppose that you'd rather measure time in days.
  Modify the parameters accordingly and verify your modifications.
\end{exercise}

\clearpage

Let's study how the epidemic curve depends on the transmission rate, $\beta$, and the infectious period.
In particular, we'll investigate how the epidemic curve changes as we vary $\beta$ from 20 to 500 and the infectious period from 5 to 30 days.

\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{betavals} \hlkwb{<-} \hlkwd{c}\hlstd{(}\hlnum{20}\hlstd{,}\hlnum{50}\hlstd{,}\hlnum{500}\hlstd{)}
\hlstd{ips} \hlkwb{<-} \hlkwd{c}\hlstd{(}\hlnum{5}\hlstd{,}\hlnum{10}\hlstd{,}\hlnum{30}\hlstd{)}
\hlstd{gammavals} \hlkwb{<-} \hlnum{365}\hlopt{/}\hlstd{ips}

\hlcom{## set some plot parameters}
\hlstd{op} \hlkwb{<-} \hlkwd{par}\hlstd{(}\hlkwc{mgp}\hlstd{=}\hlkwd{c}\hlstd{(}\hlnum{2}\hlstd{,}\hlnum{1}\hlstd{,}\hlnum{0}\hlstd{),}\hlkwc{mar}\hlstd{=}\hlkwd{c}\hlstd{(}\hlnum{3}\hlstd{,}\hlnum{3}\hlstd{,}\hlnum{1}\hlstd{,}\hlnum{1}\hlstd{),}\hlkwc{mfrow}\hlstd{=}\hlkwd{c}\hlstd{(}\hlnum{3}\hlstd{,}\hlnum{3}\hlstd{))}

\hlkwa{for} \hlstd{(beta} \hlkwa{in} \hlstd{betavals) \{}
  \hlkwa{for} \hlstd{(gamma} \hlkwa{in} \hlstd{gammavals) \{}
    \hlstd{params} \hlkwb{<-} \hlkwd{c}\hlstd{(}\hlkwc{beta}\hlstd{=beta,}\hlkwc{gamma}\hlstd{=gamma)}
    \hlstd{out} \hlkwb{<-} \hlkwd{as.data.frame}\hlstd{(}
                         \hlkwd{ode}\hlstd{(}
                             \hlkwc{func}\hlstd{=closed.sir.model,}
                             \hlkwc{y}\hlstd{=xstart,}
                             \hlkwc{times}\hlstd{=times,}
                             \hlkwc{parms}\hlstd{=params}
                             \hlstd{)}
                         \hlstd{)}
    \hlstd{title} \hlkwb{<-} \hlkwd{bquote}\hlstd{(}\hlkwd{list}\hlstd{(beta}\hlopt{==}\hlkwd{.}\hlstd{(beta),}\hlstr{"IP"}\hlopt{==}\hlkwd{.}\hlstd{(}\hlnum{365}\hlopt{/}\hlstd{gamma)}\hlopt{~}\hlstr{"da"}\hlstd{))}
    \hlkwd{plot}\hlstd{(I}\hlopt{~}\hlstd{time,}\hlkwc{data}\hlstd{=out,}\hlkwc{type}\hlstd{=}\hlstr{'l'}\hlstd{,}\hlkwc{main}\hlstd{=title)}
  \hlstd{\}}
\hlstd{\}}
\end{alltt}
\end{kframe}
\includegraphics[width=\maxwidth]{figure/nine-curves-1} 
\begin{kframe}\begin{alltt}
\hlkwd{par}\hlstd{(op)}      \hlcom{# restore old settings}
\end{alltt}
\end{kframe}
\end{knitrout}

Simulation is a useful tool, but its power is limited.
The next exercise demonstrates the importance of being able to analyze the equations as well.

\begin{exercise}
  For each of the above parameter combinations, describe the system's behavior.
  Compute $R_0$ for each parameter combination and relate it to the behavior of the system.
\end{exercise}

\begin{exercise}
  Use the ODE solver to study the dependence of the epidemic's \emph{final size} on $R_0$.
  Compare your results with the predictions of the final size equation
  \begin{equation*}
    1-R(\infty)=S(0)\,e^{-R(\infty)\,R_0}=e^{-R(\infty)\,R_0}
  \end{equation*}
  solutions of which are plotted in Fig.~\ref{fig:finalsize}.
\end{exercise}

\begin{figure}
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}


{\ttfamily\noindent\itshape\color{messagecolor}{\#\# Loading required package: emdbook}}

{\ttfamily\noindent\color{warningcolor}{\#\# Warning in library(package, lib.loc = lib.loc, character.only = TRUE, logical.return = TRUE, : there is no package called 'emdbook'}}

{\ttfamily\noindent\bfseries\color{errorcolor}{\#\# Error in lambertW(-R0 * exp(-R0)): could not find function "{}lambertW"{}}}\end{kframe}
\end{knitrout}
  \caption{The final size, $R(\infty)$, of an SIR epidemic depends only on $R_0$.}
  \label{fig:finalsize}
\end{figure}
  
\begin{solution}
Here's one code that will solve the exercise.
Others are certainly possible.
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{times} \hlkwb{<-} \hlkwd{seq}\hlstd{(}\hlkwc{from}\hlstd{=}\hlnum{0}\hlstd{,}\hlkwc{to}\hlstd{=}\hlnum{20}\hlstd{,}\hlkwc{by}\hlstd{=}\hlnum{1}\hlopt{/}\hlnum{12}\hlstd{)} \hlcom{# you might think 20 yr would be enough!}
\hlstd{xstart} \hlkwb{<-} \hlkwd{c}\hlstd{(}\hlkwc{S}\hlstd{=}\hlnum{0.999}\hlstd{,}\hlkwc{I}\hlstd{=}\hlnum{0.001}\hlstd{,}\hlkwc{R}\hlstd{=}\hlnum{0.000}\hlstd{)}
\hlstd{R0vals} \hlkwb{<-} \hlkwd{seq}\hlstd{(}\hlnum{0}\hlstd{,}\hlnum{5}\hlstd{,}\hlkwc{by}\hlstd{=}\hlnum{0.1}\hlstd{)}
\hlstd{gamma} \hlkwb{<-} \hlnum{365}\hlopt{/}\hlnum{13}
\hlstd{betavals} \hlkwb{<-} \hlstd{R0vals}\hlopt{*}\hlstd{gamma}                \hlcom{# R0 = beta/gamma}
\hlstd{finalsize} \hlkwb{<-} \hlkwd{numeric}\hlstd{(}\hlkwd{length}\hlstd{(R0vals))}    \hlcom{# a vector to hold the solutions}
\hlkwa{for} \hlstd{(k} \hlkwa{in} \hlkwd{seq_along}\hlstd{(betavals)) \{}
    \hlstd{params} \hlkwb{<-} \hlkwd{c}\hlstd{(}\hlkwc{beta}\hlstd{=betavals[k],}\hlkwc{gamma}\hlstd{=gamma)}
    \hlstd{out} \hlkwb{<-} \hlkwd{as.data.frame}\hlstd{(}
                         \hlkwd{ode}\hlstd{(}
                             \hlkwc{func}\hlstd{=closed.sir.model,}
                             \hlkwc{y}\hlstd{=xstart,}
                             \hlkwc{times}\hlstd{=times,}
                             \hlkwc{parms}\hlstd{=params}
                             \hlstd{)}
                         \hlstd{)}
    \hlstd{finalsize[k]} \hlkwb{<-} \hlkwd{tail}\hlstd{(out}\hlopt{$}\hlstd{R,}\hlnum{1}\hlstd{)}       \hlcom{# the final value of R}
\hlstd{\}}
\hlkwd{plot}\hlstd{(finalsize}\hlopt{~}\hlstd{R0vals,}\hlkwc{type}\hlstd{=}\hlstr{'o'}\hlstd{)}
\end{alltt}
\end{kframe}
\includegraphics[width=\maxwidth]{figure/finalsize-soln-1} 

\end{knitrout}
\end{solution}


\clearpage
\section{SIR dynamics in an open population}

Over a sufficiently short time scale, the assumption that the population is closed is reasonable.
To capture the dynamics over the longer term, we'll need to account for births and deaths, i.e., allow the population to be an \emph{open} one.
As we've seen, if we further assume that the birth rate equals the death rate, then the SIR equations become
\begin{equation*}
    \begin{aligned}
      \frac{dS}{dt} &= \mu -\beta\,S\,I-\mu\,S\\
      \frac{dI}{dt} &= \beta\,S\,I-\gamma\,I-\mu\,I\\
      \frac{dR}{dt} &= \gamma\,I-\mu\,R\\
    \end{aligned}
\end{equation*}

We must modify the ODE function accordingly:
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{open.sir.model} \hlkwb{<-} \hlkwa{function} \hlstd{(}\hlkwc{t}\hlstd{,} \hlkwc{x}\hlstd{,} \hlkwc{params}\hlstd{) \{}
  \hlstd{beta} \hlkwb{<-} \hlstd{params[}\hlstr{"beta"}\hlstd{]}
  \hlstd{mu} \hlkwb{<-} \hlstd{params[}\hlstr{"mu"}\hlstd{]}
  \hlstd{gamma} \hlkwb{<-} \hlstd{params[}\hlstr{"gamma"}\hlstd{]}
  \hlstd{dSdt} \hlkwb{<-} \hlstd{mu}\hlopt{*}\hlstd{(}\hlnum{1}\hlopt{-}\hlstd{x[}\hlnum{1}\hlstd{])}\hlopt{-}\hlstd{beta}\hlopt{*}\hlstd{x[}\hlnum{1}\hlstd{]}\hlopt{*}\hlstd{x[}\hlnum{2}\hlstd{]}
  \hlstd{dIdt} \hlkwb{<-} \hlstd{beta}\hlopt{*}\hlstd{x[}\hlnum{1}\hlstd{]}\hlopt{*}\hlstd{x[}\hlnum{2}\hlstd{]}\hlopt{-}\hlstd{(mu}\hlopt{+}\hlstd{gamma)}\hlopt{*}\hlstd{x[}\hlnum{2}\hlstd{]}
  \hlstd{dRdt} \hlkwb{<-} \hlstd{gamma}\hlopt{*}\hlstd{x[}\hlnum{2}\hlstd{]}\hlopt{-}\hlstd{mu}\hlopt{*}\hlstd{x[}\hlnum{3}\hlstd{]}
  \hlkwd{list}\hlstd{(}\hlkwd{c}\hlstd{(dSdt,dIdt,dRdt))}
\hlstd{\}}
\end{alltt}
\end{kframe}
\end{knitrout}

\clearpage
We'll need to specify a birth/death rate in addition to the two parameters we specified before:
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{params} \hlkwb{<-} \hlkwd{c}\hlstd{(}\hlkwc{mu}\hlstd{=}\hlnum{1}\hlopt{/}\hlnum{50}\hlstd{,}\hlkwc{beta}\hlstd{=}\hlnum{400}\hlstd{,}\hlkwc{gamma}\hlstd{=}\hlnum{365}\hlopt{/}\hlnum{13}\hlstd{)}
\end{alltt}
\end{kframe}
\end{knitrout}
We integrate the equations as before:
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{times} \hlkwb{<-} \hlkwd{seq}\hlstd{(}\hlkwc{from}\hlstd{=}\hlnum{0}\hlstd{,}\hlkwc{to}\hlstd{=}\hlnum{25}\hlstd{,}\hlkwc{by}\hlstd{=}\hlnum{1}\hlopt{/}\hlnum{365}\hlstd{)}
\hlstd{out} \hlkwb{<-} \hlkwd{as.data.frame}\hlstd{(}
                     \hlkwd{ode}\hlstd{(}
                         \hlkwc{func}\hlstd{=open.sir.model,}
                         \hlkwc{y}\hlstd{=xstart,}
                         \hlkwc{times}\hlstd{=times,}
                         \hlkwc{parms}\hlstd{=params}
                         \hlstd{)}
                     \hlstd{)}
\end{alltt}
\end{kframe}
\end{knitrout}

We can plot each of the state variables against time, and $I$ against $S$, as shown in Fig.~\ref{fig:open-epi}, using the commands:
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{op} \hlkwb{<-} \hlkwd{par}\hlstd{(}\hlkwc{fig}\hlstd{=}\hlkwd{c}\hlstd{(}\hlnum{0}\hlstd{,}\hlnum{1}\hlstd{,}\hlnum{0}\hlstd{,}\hlnum{1}\hlstd{),}\hlkwc{mfrow}\hlstd{=}\hlkwd{c}\hlstd{(}\hlnum{2}\hlstd{,}\hlnum{2}\hlstd{),}
          \hlkwc{mar}\hlstd{=}\hlkwd{c}\hlstd{(}\hlnum{3}\hlstd{,}\hlnum{3}\hlstd{,}\hlnum{1}\hlstd{,}\hlnum{1}\hlstd{),}\hlkwc{mgp}\hlstd{=}\hlkwd{c}\hlstd{(}\hlnum{2}\hlstd{,}\hlnum{1}\hlstd{,}\hlnum{0}\hlstd{))}
\hlkwd{plot}\hlstd{(S}\hlopt{~}\hlstd{time,}\hlkwc{data}\hlstd{=out,}\hlkwc{type}\hlstd{=}\hlstr{'l'}\hlstd{,}\hlkwc{log}\hlstd{=}\hlstr{'y'}\hlstd{)}
\hlkwd{plot}\hlstd{(I}\hlopt{~}\hlstd{time,}\hlkwc{data}\hlstd{=out,}\hlkwc{type}\hlstd{=}\hlstr{'l'}\hlstd{,}\hlkwc{log}\hlstd{=}\hlstr{'y'}\hlstd{)}
\hlkwd{plot}\hlstd{(R}\hlopt{~}\hlstd{time,}\hlkwc{data}\hlstd{=out,}\hlkwc{type}\hlstd{=}\hlstr{'l'}\hlstd{,}\hlkwc{log}\hlstd{=}\hlstr{'y'}\hlstd{)}
\hlkwd{plot}\hlstd{(I}\hlopt{~}\hlstd{S,}\hlkwc{data}\hlstd{=out,}\hlkwc{log}\hlstd{=}\hlstr{'xy'}\hlstd{,}\hlkwc{pch}\hlstd{=}\hlstr{'.'}\hlstd{,}\hlkwc{cex}\hlstd{=}\hlnum{0.5}\hlstd{)}
\hlkwd{par}\hlstd{(op)}
\end{alltt}
\end{kframe}
\end{knitrout}

\begin{figure}
  \begin{center}
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}


{\ttfamily\noindent\color{warningcolor}{\#\# Warning in xy.coords(x, y, xlabel, ylabel, log): 1 y value <= 0 omitted from logarithmic plot}}\end{kframe}
\includegraphics[width=\maxwidth]{figure/unnamed-chunk-6-1} 

\end{knitrout}
  \end{center}
  \caption{
    Trajectory of the SIR model.
    Each state variable is plotted against time, and $I$ is also plotted against $S$.
  }
  \label{fig:open-epi}
\end{figure}

\clearpage

\begin{exercise}
  Explore the dynamics of the system for different values of the $\beta$ and $\gamma$ parameters by simulating and plotting trajectories as time series and in phase space (e.g., $I$ vs. $S$).
  Use the same values of $\beta$ and $\gamma$ we looked at above.
  How does the value of $R_0$ affect the results?
\end{exercise}

\begin{exercise}
  Under the assumptions of this model, the average host lifespan is $1/\mu$.  
  Explore how host lifespan affects the dynamics by integrating the differential equations for lifespans of 20 and 200 years.
\end{exercise}

The compartmental modeling strategy can be put to use in modeling a tremendous range of infections.
The following exercises make some first steps in this direction.

\begin{challenge}
  The SIR model assumes lifelong sterilizing immunity following infection.
  For many infections, immunity is not permanent.
  Make a compartment diagram for an SIRS model, in which individuals lose their immunity after some time.
  Write the corresponding differential equations and modify the above codes to study its dynamics.
  Compare the SIR and SIRS dynamics for the parameters $\mu=1/50$, $\gamma=365/13$, $\beta=400$ and assuming that, in the SIRS model, immunity lasts for 10 years.
\end{challenge}

\begin{challenge}
  Make a diagram, write the equations, and study the dynamics of the SEIR model for the dynamics of an infection with a latent period.
  Compare the dynamics of SIR and SEIR models for the parameters $\mu=1/50$, $\gamma=365/5$, $\beta=1000$ and assuming that, in the SEIR model, the latent period has duration 8 days.
\end{challenge}

\section{Nonautonomous equations}

\subsection*{SIR with seasonal transmission}

The simple SIR model always predicts damped oscillations towards an equilibrium (or pathogen extinction if $R_0$ is too small). 
This is at odds with the recurrent outbreaks seen in many real pathogens. 
Sustained oscillations require some additional drivers in the model. 
An important driver in childhood infections of humans (e.g., measles) is seasonality in contact rates because of aggregation of children the during school term. 
We can analyze the consequences of this by assuming sinusoidal forcing on $\beta$ according to $\beta(t)=\beta_0\,(1+\beta_1\cos(2\,\pi\,t))$. 
We can modify the code presented above to solve the equations for a seasonally forced epidemic.
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{seas.sir.model} \hlkwb{<-} \hlkwa{function} \hlstd{(}\hlkwc{t}\hlstd{,} \hlkwc{x}\hlstd{,} \hlkwc{params}\hlstd{) \{}
  \hlstd{beta0} \hlkwb{<-} \hlstd{params[}\hlstr{"beta0"}\hlstd{]}
  \hlstd{beta1} \hlkwb{<-} \hlstd{params[}\hlstr{"beta1"}\hlstd{]}
  \hlstd{mu} \hlkwb{<-} \hlstd{params[}\hlstr{"mu"}\hlstd{]}
  \hlstd{gamma} \hlkwb{<-} \hlstd{params[}\hlstr{"gamma"}\hlstd{]}
  \hlstd{beta} \hlkwb{<-} \hlstd{beta0}\hlopt{*}\hlstd{(}\hlnum{1}\hlopt{+}\hlstd{beta1}\hlopt{*}\hlkwd{cos}\hlstd{(}\hlnum{2}\hlopt{*}\hlstd{pi}\hlopt{*}\hlstd{t))}
  \hlstd{dSdt} \hlkwb{<-} \hlstd{mu}\hlopt{*}\hlstd{(}\hlnum{1}\hlopt{-}\hlstd{x[}\hlnum{1}\hlstd{])}\hlopt{-}\hlstd{beta}\hlopt{*}\hlstd{x[}\hlnum{1}\hlstd{]}\hlopt{*}\hlstd{x[}\hlnum{2}\hlstd{]}
  \hlstd{dIdt} \hlkwb{<-} \hlstd{beta}\hlopt{*}\hlstd{x[}\hlnum{1}\hlstd{]}\hlopt{*}\hlstd{x[}\hlnum{2}\hlstd{]}\hlopt{-}\hlstd{(mu}\hlopt{+}\hlstd{gamma)}\hlopt{*}\hlstd{x[}\hlnum{2}\hlstd{]}
  \hlstd{dRdt} \hlkwb{<-} \hlstd{gamma}\hlopt{*}\hlstd{x[}\hlnum{2}\hlstd{]}\hlopt{-}\hlstd{mu}\hlopt{*}\hlstd{x[}\hlnum{3}\hlstd{]}
  \hlkwd{list}\hlstd{(}\hlkwd{c}\hlstd{(dSdt,dIdt,dRdt))}
\hlstd{\}}

\hlstd{params} \hlkwb{<-} \hlkwd{c}\hlstd{(}\hlkwc{mu}\hlstd{=}\hlnum{1}\hlopt{/}\hlnum{50}\hlstd{,}\hlkwc{beta0}\hlstd{=}\hlnum{400}\hlstd{,}\hlkwc{beta1}\hlstd{=}\hlnum{0.15}\hlstd{,}\hlkwc{gamma}\hlstd{=}\hlnum{365}\hlopt{/}\hlnum{13}\hlstd{)}
\hlstd{xstart} \hlkwb{<-} \hlkwd{c}\hlstd{(}\hlkwc{S}\hlstd{=}\hlnum{0.07}\hlstd{,}\hlkwc{I}\hlstd{=}\hlnum{0.00039}\hlstd{,}\hlkwc{R}\hlstd{=}\hlnum{0.92961}\hlstd{)}
\hlstd{times} \hlkwb{<-} \hlkwd{seq}\hlstd{(}\hlkwc{from}\hlstd{=}\hlnum{0}\hlstd{,}\hlkwc{to}\hlstd{=}\hlnum{30}\hlstd{,}\hlkwc{by}\hlstd{=}\hlnum{7}\hlopt{/}\hlnum{365}\hlstd{)}
\hlstd{out} \hlkwb{<-} \hlkwd{as.data.frame}\hlstd{(}
                     \hlkwd{ode}\hlstd{(}
                         \hlkwc{func}\hlstd{=seas.sir.model,}
                         \hlkwc{y}\hlstd{=xstart,}
                         \hlkwc{times}\hlstd{=times,}
                         \hlkwc{parms}\hlstd{=params}
                         \hlstd{)}
                     \hlstd{)}

\hlstd{op} \hlkwb{<-} \hlkwd{par}\hlstd{(}\hlkwc{fig}\hlstd{=}\hlkwd{c}\hlstd{(}\hlnum{0}\hlstd{,}\hlnum{1}\hlstd{,}\hlnum{0}\hlstd{,}\hlnum{1}\hlstd{),}\hlkwc{mfrow}\hlstd{=}\hlkwd{c}\hlstd{(}\hlnum{2}\hlstd{,}\hlnum{2}\hlstd{),}
          \hlkwc{mar}\hlstd{=}\hlkwd{c}\hlstd{(}\hlnum{3}\hlstd{,}\hlnum{3}\hlstd{,}\hlnum{1}\hlstd{,}\hlnum{1}\hlstd{),}\hlkwc{mgp}\hlstd{=}\hlkwd{c}\hlstd{(}\hlnum{2}\hlstd{,}\hlnum{1}\hlstd{,}\hlnum{0}\hlstd{))}
\hlkwd{plot}\hlstd{(S}\hlopt{~}\hlstd{time,}\hlkwc{data}\hlstd{=out,}\hlkwc{type}\hlstd{=}\hlstr{'l'}\hlstd{,}\hlkwc{log}\hlstd{=}\hlstr{'y'}\hlstd{)}
\hlkwd{plot}\hlstd{(I}\hlopt{~}\hlstd{time,}\hlkwc{data}\hlstd{=out,}\hlkwc{type}\hlstd{=}\hlstr{'l'}\hlstd{,}\hlkwc{log}\hlstd{=}\hlstr{'y'}\hlstd{)}
\hlkwd{plot}\hlstd{(R}\hlopt{~}\hlstd{time,}\hlkwc{data}\hlstd{=out,}\hlkwc{type}\hlstd{=}\hlstr{'l'}\hlstd{,}\hlkwc{log}\hlstd{=}\hlstr{'y'}\hlstd{)}
\hlkwd{plot}\hlstd{(I}\hlopt{~}\hlstd{S,}\hlkwc{data}\hlstd{=out,}\hlkwc{log}\hlstd{=}\hlstr{'xy'}\hlstd{,}\hlkwc{pch}\hlstd{=}\hlstr{'.'}\hlstd{,}\hlkwc{cex}\hlstd{=}\hlnum{0.5}\hlstd{)}
\end{alltt}
\end{kframe}
\includegraphics[width=\maxwidth]{figure/seas-sir-1} 
\begin{kframe}\begin{alltt}
\hlkwd{par}\hlstd{(op)}
\end{alltt}
\end{kframe}
\end{knitrout}

\begin{exercise}
  Explore the dynamics of the seasonally forced SIR model for increasing amplitude $\beta_1$.
  Be sure to distinguish between transient and asymptotic dynamics.
\end{exercise}

\subsection*{Forcing with a covariate}

When a covariate forces the equations, we must interpolate the covariate.
To give an example, let's suppose that the transmission rate depends on rainfall, $R(t)$, and that we have data on rainfall (in mm/mo).
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{rain} \hlkwb{<-} \hlkwd{read.csv}\hlstd{(}\hlstr{"dacca_rainfall.csv"}\hlstd{)}
\end{alltt}


{\ttfamily\noindent\color{warningcolor}{\#\# Warning in file(file, "{}rt"{}): cannot open file 'dacca\_rainfall.csv': No such file or directory}}

{\ttfamily\noindent\bfseries\color{errorcolor}{\#\# Error in file(file, "{}rt"{}): cannot open the connection}}\begin{alltt}
\hlstd{rain}\hlopt{$}\hlstd{time} \hlkwb{<-} \hlkwd{with}\hlstd{(rain,year}\hlopt{+}\hlstd{(month}\hlopt{-}\hlnum{1}\hlstd{)}\hlopt{/}\hlnum{12}\hlstd{)}
\end{alltt}


{\ttfamily\noindent\bfseries\color{errorcolor}{\#\# Error in with(rain, year + (month - 1)/12): object 'rain' not found}}\begin{alltt}
\hlkwd{plot}\hlstd{(rainfall}\hlopt{~}\hlstd{time,}\hlkwc{data}\hlstd{=rain,}\hlkwc{type}\hlstd{=}\hlstr{'l'}\hlstd{)}
\end{alltt}


{\ttfamily\noindent\bfseries\color{errorcolor}{\#\# Error in eval(m\$data, eframe): object 'rain' not found}}\end{kframe}
\end{knitrout}

Let's assume that transmission depends on rainfall according to
\begin{equation*}
  \log\beta(t) = \frac{a\,R(t)}{b+R(t)}
\end{equation*}
Since the data are accumulated monthly rainfall figures but the ODE integrator will need to evaluate $R(t)$ at arbitrary times, we'll need some way of interpolating the rainfall data.
\pkg{R} affords us numerous ways of doing this.
The \pkg{R} functions \code{approxfun} and \code{splinefun} construct interpolating functions in different ways; 
see the documentation on these functions.
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{interpol} \hlkwb{<-} \hlkwd{with}\hlstd{(rain,}\hlkwd{approxfun}\hlstd{(time,rainfall,}\hlkwc{rule}\hlstd{=}\hlnum{2}\hlstd{,}\hlkwc{method}\hlstd{=}\hlstr{'constant'}\hlstd{))}
\end{alltt}


{\ttfamily\noindent\bfseries\color{errorcolor}{\#\# Error in with(rain, approxfun(time, rainfall, rule = 2, method = "{}constant"{})): object 'rain' not found}}\begin{alltt}
\hlkwd{data.frame}\hlstd{(}\hlkwc{time}\hlstd{=}\hlkwd{seq}\hlstd{(}\hlkwc{from}\hlstd{=}\hlnum{1920}\hlstd{,}\hlkwc{to}\hlstd{=}\hlnum{1930}\hlstd{,}\hlkwc{by}\hlstd{=}\hlnum{1}\hlopt{/}\hlnum{365}\hlstd{))} \hlkwb{->} \hlstd{smoothed.rain}
\hlstd{smoothed.rain}\hlopt{$}\hlstd{rainfall} \hlkwb{<-} \hlkwd{sapply}\hlstd{(smoothed.rain}\hlopt{$}\hlstd{time,interpol)}
\end{alltt}


{\ttfamily\noindent\bfseries\color{errorcolor}{\#\# Error in match.fun(FUN): object 'interpol' not found}}\begin{alltt}
\hlkwd{plot}\hlstd{(rainfall}\hlopt{~}\hlstd{time,}\hlkwc{data}\hlstd{=rain,}\hlkwc{col}\hlstd{=}\hlstr{'black'}\hlstd{,}\hlkwc{cex}\hlstd{=}\hlnum{2}\hlstd{,}\hlkwc{pch}\hlstd{=}\hlnum{16}\hlstd{,}\hlkwc{log}\hlstd{=}\hlstr{''}\hlstd{)}
\end{alltt}


{\ttfamily\noindent\bfseries\color{errorcolor}{\#\# Error in eval(m\$data, eframe): object 'rain' not found}}\begin{alltt}
\hlkwd{lines}\hlstd{(rainfall}\hlopt{~}\hlstd{time,}\hlkwc{data}\hlstd{=smoothed.rain,}\hlkwc{col}\hlstd{=}\hlstr{'red'}\hlstd{)}
\end{alltt}


{\ttfamily\noindent\bfseries\color{errorcolor}{\#\# Error in eval(predvars, data, env): object 'rainfall' not found}}\end{kframe}
\end{knitrout}

\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{rain.sir.model} \hlkwb{<-} \hlkwa{function} \hlstd{(}\hlkwc{t}\hlstd{,} \hlkwc{x}\hlstd{,} \hlkwc{params}\hlstd{) \{}
  \hlstd{a} \hlkwb{<-} \hlstd{params[}\hlstr{"a"}\hlstd{]}
  \hlstd{b} \hlkwb{<-} \hlstd{params[}\hlstr{"b"}\hlstd{]}
  \hlstd{mu} \hlkwb{<-} \hlstd{params[}\hlstr{"mu"}\hlstd{]}
  \hlstd{gamma} \hlkwb{<-} \hlstd{params[}\hlstr{"gamma"}\hlstd{]}
  \hlstd{R} \hlkwb{<-} \hlkwd{interpol}\hlstd{(t)}
  \hlstd{beta} \hlkwb{<-} \hlstd{a}\hlopt{*}\hlstd{R}\hlopt{/}\hlstd{(b}\hlopt{+}\hlstd{R)}
  \hlstd{dSdt} \hlkwb{<-} \hlstd{mu}\hlopt{*}\hlstd{(}\hlnum{1}\hlopt{-}\hlstd{x[}\hlnum{1}\hlstd{])}\hlopt{-}\hlstd{beta}\hlopt{*}\hlstd{x[}\hlnum{1}\hlstd{]}\hlopt{*}\hlstd{x[}\hlnum{2}\hlstd{]}
  \hlstd{dIdt} \hlkwb{<-} \hlstd{beta}\hlopt{*}\hlstd{x[}\hlnum{1}\hlstd{]}\hlopt{*}\hlstd{x[}\hlnum{2}\hlstd{]}\hlopt{-}\hlstd{(mu}\hlopt{+}\hlstd{gamma)}\hlopt{*}\hlstd{x[}\hlnum{2}\hlstd{]}
  \hlstd{dRdt} \hlkwb{<-} \hlstd{gamma}\hlopt{*}\hlstd{x[}\hlnum{2}\hlstd{]}\hlopt{-}\hlstd{mu}\hlopt{*}\hlstd{x[}\hlnum{3}\hlstd{]}
  \hlkwd{list}\hlstd{(}\hlkwd{c}\hlstd{(dSdt,dIdt,dRdt))}
\hlstd{\}}

\hlstd{params} \hlkwb{<-} \hlkwd{c}\hlstd{(}\hlkwc{a}\hlstd{=}\hlnum{500}\hlstd{,}\hlkwc{b}\hlstd{=}\hlnum{50}\hlstd{,}\hlkwc{mu}\hlstd{=}\hlnum{1}\hlopt{/}\hlnum{50}\hlstd{,}\hlkwc{gamma}\hlstd{=}\hlnum{365}\hlopt{/}\hlnum{13}\hlstd{)}
\hlstd{xstart} \hlkwb{<-} \hlkwd{c}\hlstd{(}\hlkwc{S}\hlstd{=}\hlnum{0.07}\hlstd{,}\hlkwc{I}\hlstd{=}\hlnum{0.00039}\hlstd{,}\hlkwc{R}\hlstd{=}\hlnum{0.92961}\hlstd{)}
\hlstd{times} \hlkwb{<-} \hlkwd{seq}\hlstd{(}\hlkwc{from}\hlstd{=}\hlnum{1920}\hlstd{,}\hlkwc{to}\hlstd{=}\hlnum{1930}\hlstd{,}\hlkwc{by}\hlstd{=}\hlnum{7}\hlopt{/}\hlnum{365}\hlstd{)}
\hlstd{out} \hlkwb{<-} \hlkwd{as.data.frame}\hlstd{(}
                     \hlkwd{ode}\hlstd{(}
                         \hlkwc{func}\hlstd{=rain.sir.model,}
                         \hlkwc{y}\hlstd{=xstart,}
                         \hlkwc{times}\hlstd{=times,}
                         \hlkwc{parms}\hlstd{=params}
                         \hlstd{)}
                     \hlstd{)}
\end{alltt}


{\ttfamily\noindent\bfseries\color{errorcolor}{\#\# Error in interpol(t): could not find function "{}interpol"{}}}\begin{alltt}
\hlstd{op} \hlkwb{<-} \hlkwd{par}\hlstd{(}\hlkwc{fig}\hlstd{=}\hlkwd{c}\hlstd{(}\hlnum{0}\hlstd{,}\hlnum{1}\hlstd{,}\hlnum{0}\hlstd{,}\hlnum{1}\hlstd{),}\hlkwc{mfrow}\hlstd{=}\hlkwd{c}\hlstd{(}\hlnum{2}\hlstd{,}\hlnum{2}\hlstd{),}
          \hlkwc{mar}\hlstd{=}\hlkwd{c}\hlstd{(}\hlnum{3}\hlstd{,}\hlnum{3}\hlstd{,}\hlnum{1}\hlstd{,}\hlnum{1}\hlstd{),}\hlkwc{mgp}\hlstd{=}\hlkwd{c}\hlstd{(}\hlnum{2}\hlstd{,}\hlnum{1}\hlstd{,}\hlnum{0}\hlstd{))}
\hlkwd{plot}\hlstd{(S}\hlopt{~}\hlstd{time,}\hlkwc{data}\hlstd{=out,}\hlkwc{type}\hlstd{=}\hlstr{'l'}\hlstd{,}\hlkwc{log}\hlstd{=}\hlstr{'y'}\hlstd{)}
\hlkwd{plot}\hlstd{(I}\hlopt{~}\hlstd{time,}\hlkwc{data}\hlstd{=out,}\hlkwc{type}\hlstd{=}\hlstr{'l'}\hlstd{,}\hlkwc{log}\hlstd{=}\hlstr{'y'}\hlstd{)}
\hlkwd{plot}\hlstd{(R}\hlopt{~}\hlstd{time,}\hlkwc{data}\hlstd{=out,}\hlkwc{type}\hlstd{=}\hlstr{'l'}\hlstd{,}\hlkwc{log}\hlstd{=}\hlstr{'y'}\hlstd{)}
\hlkwd{plot}\hlstd{(I}\hlopt{~}\hlstd{S,}\hlkwc{data}\hlstd{=out,}\hlkwc{log}\hlstd{=}\hlstr{'xy'}\hlstd{,}\hlkwc{pch}\hlstd{=}\hlstr{'.'}\hlstd{,}\hlkwc{cex}\hlstd{=}\hlnum{1}\hlstd{)}
\end{alltt}
\end{kframe}
\includegraphics[width=\maxwidth]{figure/solve-rain-forced-1} 
\begin{kframe}\begin{alltt}
\hlkwd{par}\hlstd{(op)}
\end{alltt}
\end{kframe}
\end{knitrout}

More generally, any fitting method that has an associated \code{predict} method can be used.
For example, we can use local polynomial regression, \code{loess}, to smooth the rainfall data.
Do \verb+?loess+ and \verb+?predict.loess+ for more details.
\begin{knitrout}
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{fit} \hlkwb{<-} \hlkwd{loess}\hlstd{(}\hlkwd{log1p}\hlstd{(rainfall)}\hlopt{~}\hlstd{time,}\hlkwc{data}\hlstd{=rain,}\hlkwc{span}\hlstd{=}\hlnum{0.05}\hlstd{)}
\end{alltt}


{\ttfamily\noindent\bfseries\color{errorcolor}{\#\# Error in is.data.frame(data): object 'rain' not found}}\begin{alltt}
\hlkwd{data.frame}\hlstd{(}\hlkwc{time}\hlstd{=}\hlkwd{seq}\hlstd{(}\hlkwc{from}\hlstd{=}\hlnum{1920}\hlstd{,}\hlkwc{to}\hlstd{=}\hlnum{1930}\hlstd{,}\hlkwc{by}\hlstd{=}\hlnum{1}\hlopt{/}\hlnum{365}\hlstd{))} \hlkwb{->} \hlstd{smoothed.rain}
\hlstd{smoothed.rain}\hlopt{$}\hlstd{rainfall} \hlkwb{<-} \hlkwd{expm1}\hlstd{(}\hlkwd{predict}\hlstd{(fit,}\hlkwc{newdata}\hlstd{=smoothed.rain))}
\end{alltt}


{\ttfamily\noindent\bfseries\color{errorcolor}{\#\# Error in predict(fit, newdata = smoothed.rain): object 'fit' not found}}\begin{alltt}
\hlkwd{plot}\hlstd{(rainfall}\hlopt{~}\hlstd{time,}\hlkwc{data}\hlstd{=rain,}\hlkwc{col}\hlstd{=}\hlstr{'black'}\hlstd{,}\hlkwc{cex}\hlstd{=}\hlnum{2}\hlstd{,}\hlkwc{pch}\hlstd{=}\hlnum{16}\hlstd{,}\hlkwc{log}\hlstd{=}\hlstr{''}\hlstd{)}
\end{alltt}


{\ttfamily\noindent\bfseries\color{errorcolor}{\#\# Error in eval(m\$data, eframe): object 'rain' not found}}\begin{alltt}
\hlkwd{lines}\hlstd{(rainfall}\hlopt{~}\hlstd{time,}\hlkwc{data}\hlstd{=smoothed.rain,}\hlkwc{col}\hlstd{=}\hlstr{'red'}\hlstd{)}
\end{alltt}


{\ttfamily\noindent\bfseries\color{errorcolor}{\#\# Error in eval(predvars, data, env): object 'rainfall' not found}}\end{kframe}
\end{knitrout}


\end{document}



\clearpage
\bibliographystyle{ecology}
\bibliography{biblios}


Second lab: 
* linear regression on initial segment of flu data to estimate R0
* exercise: try this for 4, 5, 6 points, look at both R0hat and se(R0)
* least squares fit of closed epidemic model to data
* one parameter at a time for fixed values of the others
* again on log scale
* 
